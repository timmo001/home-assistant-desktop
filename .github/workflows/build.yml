---
name: Build / Deploy

# yamllint disable-line rule:truthy
on:
  push:
    branches:
      - master
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  build-app:
    name: Build App - ${{ matrix.os.name }}
    runs-on: ${{ matrix.os.machine }}
    strategy:
      matrix:
        os:
          - name: linux
            machine: ubuntu-latest
          - name: windows
            machine: windows-latest
      fail-fast: false
    steps:
      - name: ‚§µÔ∏è Check out code from GitHub
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
      - name: üèó Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: yarn
          cache-dependency-path: yarn.lock
      - name: üìÇ Cache Electron
        uses: actions/cache@v3.0.11
        with:
          path: ${{ github.workspace }}/.cache/electron
          key: ${{ runner.os }}-electron-cache-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}
          restore-keys: |
            ${{ runner.os }}-electron-cache-
      - name: üìÇ Cache Electron-Builder
        uses: actions/cache@v3.0.11
        with:
          path: ${{ github.workspace }}/.cache/electron-builder
          key: ${{ runner.os }}-electron-builder-cache-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}
          restore-keys: |
            ${{ runner.os }}-electron-builder-cache-
      - name: üèó Install dependencies
        run: |
          yarn install
      - name: üèóÔ∏è Build / Release
        env:
          ELECTRON_BUILDER_CACHE: ${{ github.workspace }}/.cache/electron-builder
          ELECTRON_CACHE: ${{ github.workspace }}/.cache/electron
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          yarn build
      - name: ‚¨Ü Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: release-${{ matrix.os.name }}
          path: release
